# python manage.py startapp news
#
# >создал модели для вывода всех статей в виде заголовка, даты публикации и первых 20 символов текста.
#
#
# class News(models.Model):
#     author = models.ForeignKey(User, on_delete=models.CASCADE, related_name='articles')
#     title = models.CharField(max_length=255)
#     content = models.TextField()
#     created_at = models.DateField(auto_now=True)
#
#     sentiment = models.CharField(max_length=20)
#
#     published = models.BooleanField(default=False)
#
#     def __str__(self):
#         return self.title
#
#     @classmethod
#     def search(cls, query):
#         return cls.objects.filter(title__icontains=query, published=True)
#
# class Article(models.Model):
#     title = models.CharField(max_length=200, verbose_name="Заголовок")
#     text = models.TextField(verbose_name="Текст")
#     pub_date = models.DateTimeField(auto_now_add=True, verbose_name="Дата публикации")
#
#     def __str__(self):
#         return self.title
#
#     class Meta:
#         verbose_name = "Новость"
#         verbose_name_plural = "Новости"
#         ordering = ['-pub_date']  # сортировка по дате от новых к старым
#
# >В файле news/views.py создал два представления: для списка новостей и для детальной страницы новостей.
#
# def news_list(request):
#     articles = Article.objects.order_by('-pab_date')
#     return render(request, 'news_list.html', {'articles': articles})
#
# def news_detail(request, article_id):
#     article = get_object_or_404(Article, id=article_id)
#     return render(request, 'news_detail.html', {'article': article})
#
#
#
# >В файле news/urls.py создал маршруты для представлений:
#
# urlpatterns = [
#     path('', views.news_list, name='news_list'),
#     path('<int:article_id>/', views.news_detail, name='news_detail'),
# ]
# >Подключил URL-адреса приложения news в основном файле NewsPortal_D2/urls.py
#urlpatterns = [
#     path('admin/', admin.site.urls),
#     path('news/', include('newapp.urls')),
# ]
# >Создал шаблоны в папке templates/newapp/ в приложении news и создал  два файла HTML:
#
# 1.news_list.html (список новостей)
#
# {% extends 'default.html' %}
# {% load custom_filters %}
# {% block content %}
# <h1>Список новостей</h1>
# <ul>
#     {% for article in articles %}
#     <li>
#         <a href="{% url 'news_detail' article.id %}">{{ article.title }}</a>
#         <p>{{ article.pub_date|date:"d.m.Y" }}</p>
#         <p>{{ article.text|truncatechars:20 }}</p>
#     </li>
#     {% endfor %}
# </ul>
# {% endblock %}
#
# 2.news_detail.html (детальная страница новости)
#
# {% extends 'default.html' %}
# {% load custom_filters %}
# {% block content %}
# {% block content %}
# <h1>{{ article.title|censor }}</h1>
# <p>Дата публикации: {{ article.pub_date|date:"d.m.Y" }}</p>
# <p>{{ article.text|censor }}</p>
# <a href="{% url 'news_list' %}">Назад к списку новостей</a>
# {% endblock %}
#
#
#
# default.html (базовый шаблон)
#
# >Создал файл templates/default.html в корневой папке проекта:
# <!DOCTYPE html>
# <html lang="ru">
# <head>
#     <meta charset="UTF-8">
#     <title>{% block title %}Новости{% endblock %}</title>
# </head>
# <body>
#     <header>
#         <h1>Новостной портал</h1>
#     </header>
#     <main>
#         {% block content %}{% endblock %}
#     </main>
#     <footer>
#         <p>&copy; 2023 Новостной портал</p>
#     </footer>
# </body>
# </html>
#
# Создал фильтр censor в  папку templatetags/ в приложении news. Внутри создал файл custom_filters.py:
#
# register = template.Library()
#
# @register.filter(name='censor')
# def censor(value):
#     unwanted_words = ['редиска', 'плохое слово', 'еще слово']  # Список нежелательных слов
#     for word in unwanted_words:
#         value = value.replace(word, '*' * len(word))
#     return value
